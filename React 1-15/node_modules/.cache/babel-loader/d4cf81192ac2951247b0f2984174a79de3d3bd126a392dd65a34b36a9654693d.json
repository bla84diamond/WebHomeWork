{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bla84\\\\Documents\\\\GitHub\\\\WebHomeWork\\\\React 1-15\\\\src\\\\Homework\\\\Home13.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TaskInput from \"./For13Task/TaskInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home13() {\n  _s();\n  const categories = [{\n    id: \"personal\",\n    name: \"Домашние дела\",\n    icon: \"🏠\"\n  }, {\n    id: \"work\",\n    name: \"Рабочие процессы\",\n    icon: \"💼\"\n  }, {\n    id: \"study\",\n    name: \"Тренировки\",\n    icon: \"📚\"\n  }, {\n    id: \"leisure\",\n    name: \"Релакс\",\n    icon: \"⛱️\"\n  }];\n  const [selectedCategory, setSelectedCategory] = useState(categories[0].id);\n  const [tasks, setTasks] = useState([]);\n  const handleCategoryClick = categoryId => {\n    setSelectedCategory(categoryId);\n  };\n  const handleAddTask = task => {\n    setTasks([...tasks, task]);\n  };\n  const filteredTasks = tasks.filter(task => task.category === selectedCategory);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCategoryClick(category.id),\n        children: [category.icon, \" \", category.name]\n      }, category.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: task.title\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n      onAddTask: handleAddTask,\n      selectedCategory: selectedCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Home13, \"N9tqOtN080jGDJ6ipsDxIKJDYZs=\");\n_c = Home13;\n;\nexport default Home13;\nvar _c;\n$RefreshReg$(_c, \"Home13\");","map":{"version":3,"names":["React","useState","TaskInput","jsxDEV","_jsxDEV","Home13","_s","categories","id","name","icon","selectedCategory","setSelectedCategory","tasks","setTasks","handleCategoryClick","categoryId","handleAddTask","task","filteredTasks","filter","category","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","onAddTask","_c","$RefreshReg$"],"sources":["C:/Users/bla84/Documents/GitHub/WebHomeWork/React 1-15/src/Homework/Home13.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport TaskInput from \"./For13Task/TaskInput\";\r\n\r\nfunction Home13() {\r\n  const categories = [\r\n    { id: \"personal\", name: \"Домашние дела\", icon: \"🏠\" },\r\n    { id: \"work\", name: \"Рабочие процессы\", icon: \"💼\" },\r\n    { id: \"study\", name: \"Тренировки\", icon: \"📚\" },\r\n    { id: \"leisure\", name: \"Релакс\", icon: \"⛱️\" },\r\n  ];\r\n  const [selectedCategory, setSelectedCategory] = useState(categories[0].id);\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const handleCategoryClick = (categoryId) => {\r\n    setSelectedCategory(categoryId);\r\n  };\r\n\r\n  const handleAddTask = (task) => {\r\n    setTasks([...tasks, task]);\r\n  };\r\n\r\n  const filteredTasks = tasks.filter(task => task.category === selectedCategory);\r\n\r\n  return (\r\n    <div>\r\n      <nav>\r\n        {categories.map(category => (\r\n          <button key={category.id} onClick={() => handleCategoryClick(category.id)}>\r\n            {category.icon} {category.name}\r\n          </button>\r\n        ))}\r\n      </nav>\r\n      <ul>\r\n        {filteredTasks.map(task => (\r\n          <li key={task.id}>{task.title}</li>\r\n        ))}\r\n      </ul>\r\n      <TaskInput onAddTask={handleAddTask} selectedCategory={selectedCategory} />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Home13;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,UAAU,GAAG,CACjB;IAAEC,EAAE,EAAE,UAAU;IAAEC,IAAI,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAK,CAAC,EACrD;IAAEF,EAAE,EAAE,MAAM;IAAEC,IAAI,EAAE,kBAAkB;IAAEC,IAAI,EAAE;EAAK,CAAC,EACpD;IAAEF,EAAE,EAAE,OAAO;IAAEC,IAAI,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAK,CAAC,EAC/C;IAAEF,EAAE,EAAE,SAAS;IAAEC,IAAI,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAK,CAAC,CAC9C;EACD,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAACM,UAAU,CAAC,CAAC,CAAC,CAACC,EAAE,CAAC;EAC1E,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMc,mBAAmB,GAAIC,UAAU,IAAK;IAC1CJ,mBAAmB,CAACI,UAAU,CAAC;EACjC,CAAC;EAED,MAAMC,aAAa,GAAIC,IAAI,IAAK;IAC9BJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEK,IAAI,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,aAAa,GAAGN,KAAK,CAACO,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACG,QAAQ,KAAKV,gBAAgB,CAAC;EAE9E,oBACEP,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EACGf,UAAU,CAACgB,GAAG,CAACF,QAAQ,iBACtBjB,OAAA;QAA0BoB,OAAO,EAAEA,CAAA,KAAMT,mBAAmB,CAACM,QAAQ,CAACb,EAAE,CAAE;QAAAc,QAAA,GACvED,QAAQ,CAACX,IAAI,EAAC,GAAC,EAACW,QAAQ,CAACZ,IAAI;MAAA,GADnBY,QAAQ,CAACb,EAAE;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNxB,OAAA;MAAAkB,QAAA,EACGH,aAAa,CAACI,GAAG,CAACL,IAAI,iBACrBd,OAAA;QAAAkB,QAAA,EAAmBJ,IAAI,CAACW;MAAK,GAApBX,IAAI,CAACV,EAAE;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLxB,OAAA,CAACF,SAAS;MAAC4B,SAAS,EAAEb,aAAc;MAACN,gBAAgB,EAAEA;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEV;AAACtB,EAAA,CArCQD,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AAqCd;AAGD,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}